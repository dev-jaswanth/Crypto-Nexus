{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DEV JASWANTH\\\\OneDrive\\\\Desktop\\\\cryptoroad\\\\src\\\\CryptoContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { auth, db } from \"./firebase\";\nimport axios from \"axios\";\nimport { CoinList } from \"./config/api\";\nimport { onSnapshot, doc } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Crypto = /*#__PURE__*/createContext();\nconst CryptoContext = ({\n  children\n}) => {\n  _s();\n  const [currency, setCurrency] = useState(\"INR\");\n  const [symbol, setSymbol] = useState(\"₹\");\n  const [alert, setAlert] = useState({\n    open: false,\n    message: \"\",\n    type: \"success\"\n  });\n  const [user, setUser] = useState(null);\n  const [coins, setCoins] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [watchlist, setWatchlist] = useState([]);\n  useEffect(() => {\n    if (user) {\n      const coinRef = doc(db, \"watchlist\", user === null || user === void 0 ? void 0 : user.uid);\n      var unsubscribe = onSnapshot(coinRef, coin => {\n        if (coin.exists()) {\n          console.log(coin.data().coins);\n          setWatchlist(coin.data().coins);\n        } else {\n          console.log(\"No Items in Watchlist\");\n        }\n      });\n      return () => {\n        unsubscribe();\n      };\n    }\n  }, [user]);\n  useEffect(() => {\n    onAuthStateChanged(auth, user => {\n      if (user) setUser(user);else setUser(null);\n    });\n  }, []);\n  const fetchCoins = async () => {\n    setLoading(true);\n    const {\n      data\n    } = await axios.get(CoinList(currency));\n    setCoins(data);\n    setLoading(false);\n  };\n  useEffect(() => {\n    if (currency === \"INR\") setSymbol(\"₹\");else if (currency === \"USD\") setSymbol(\"$\");\n    fetchCoins();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currency]);\n  return /*#__PURE__*/_jsxDEV(Crypto.Provider, {\n    value: {\n      currency,\n      setCurrency,\n      symbol,\n      alert,\n      setAlert,\n      user,\n      coins,\n      loading,\n      watchlist\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(CryptoContext, \"8gwqIRtjTzOEEHTlwHo5Rcj8ebA=\");\n_c = CryptoContext;\nexport default CryptoContext;\nexport const CryptoState = () => {\n  _s2();\n  return useContext(Crypto);\n};\n_s2(CryptoState, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n_c2 = CryptoState;\nvar _c, _c2;\n$RefreshReg$(_c, \"CryptoContext\");\n$RefreshReg$(_c2, \"CryptoState\");","map":{"version":3,"names":["createContext","useContext","useEffect","useState","onAuthStateChanged","auth","db","axios","CoinList","onSnapshot","doc","jsxDEV","_jsxDEV","Crypto","CryptoContext","children","_s","currency","setCurrency","symbol","setSymbol","alert","setAlert","open","message","type","user","setUser","coins","setCoins","loading","setLoading","watchlist","setWatchlist","coinRef","uid","unsubscribe","coin","exists","console","log","data","fetchCoins","get","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","CryptoState","_s2","_c2","$RefreshReg$"],"sources":["C:/Users/DEV JASWANTH/OneDrive/Desktop/cryptoroad/src/CryptoContext.js"],"sourcesContent":["import { createContext, useContext, useEffect, useState } from \"react\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { auth, db } from \"./firebase\";\nimport axios from \"axios\";\nimport { CoinList } from \"./config/api\";\nimport { onSnapshot, doc } from \"firebase/firestore\";\n\nconst Crypto = createContext();\n\nconst CryptoContext = ({ children }) => {\n  const [currency, setCurrency] = useState(\"INR\");\n  const [symbol, setSymbol] = useState(\"₹\");\n  const [alert, setAlert] = useState({\n    open: false,\n    message: \"\",\n    type: \"success\",\n  });\n  const [user, setUser] = useState(null);\n  const [coins, setCoins] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [watchlist, setWatchlist] = useState([]);\n\n  useEffect(() => {\n    if (user) {\n      const coinRef = doc(db, \"watchlist\", user?.uid);\n      var unsubscribe = onSnapshot(coinRef, (coin) => {\n        if (coin.exists()) {\n          console.log(coin.data().coins);\n          setWatchlist(coin.data().coins);\n        } else {\n          console.log(\"No Items in Watchlist\");\n        }\n      });\n\n      return () => {\n        unsubscribe();\n      };\n    }\n  }, [user]);\n\n  useEffect(() => {\n    onAuthStateChanged(auth, (user) => {\n      if (user) setUser(user);\n      else setUser(null);\n    });\n  }, []);\n\n  const fetchCoins = async () => {\n    setLoading(true);\n    const { data } = await axios.get(CoinList(currency));\n\n    setCoins(data);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    if (currency === \"INR\") setSymbol(\"₹\");\n    else if (currency === \"USD\") setSymbol(\"$\");\n\n    fetchCoins();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currency]);\n\n  return (\n    <Crypto.Provider\n      value={{\n        currency,\n        setCurrency,\n        symbol,\n        alert,\n        setAlert,\n        user,\n        coins,\n        loading,\n        watchlist,\n      }}\n    >\n      {children}\n    </Crypto.Provider>\n  );\n};\n\nexport default CryptoContext;\n\nexport const CryptoState = () => {\n  return useContext(Crypto);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}